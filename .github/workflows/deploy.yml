name: üöÄ Deploy Node.js Microservices with Docker Compose

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:

      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2 

      - name: üîç Detect changed services
        id: changed-services
        run: |
          # Get changed files in the current commit compared to the previous one
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)
          SERVICES=""
          if echo "$CHANGED_FILES" | grep -q "^nginx/"; then
            SERVICES="$SERVICES nginx"
          fi
          if echo "$CHANGED_FILES" | grep -q "^gateway/"; then
            SERVICES="$SERVICES gateway"
          fi
          if echo "$CHANGED_FILES" | grep -q "^services/auth-service/"; then
            SERVICES="$SERVICES auth-service"
          fi
          # Remove leading/trailing whitespace
          SERVICES=$(echo "$SERVICES" | xargs)
          if [ -z "$SERVICES" ]; then
            echo "No services changed. Skipping deployment."
            echo "services=" >> $GITHUB_OUTPUT
          else
            echo "Changed services: $SERVICES"
            echo "services=$SERVICES" >> $GITHUB_OUTPUT
          fi

      - name: üê≥ Login to Docker Hub
        if: steps.changed-services.outputs.services != ''
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: üõ† Build changed Docker images
        if: steps.changed-services.outputs.services != ''
        run: |
          for SERVICE in ${{ steps.changed-services.outputs.services }}; do
            if [ "$SERVICE" != "nginx" ]; then
              docker compose build $SERVICE
            fi
          done

      - name: üì¶ Tag & Push changed Docker images
        if: steps.changed-services.outputs.services != ''
        run: |
          for SERVICE in ${{ steps.changed-services.outputs.services }}; do
            if [ "$SERVICE" != "nginx" ]; then
              docker tag $SERVICE ${{ secrets.DOCKER_USERNAME }}/$SERVICE:latest
              docker push ${{ secrets.DOCKER_USERNAME }}/$SERVICE:latest
            fi
          done

      - name: üîê Setup SSH Key
        if: steps.changed-services.outputs.services != ''
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: üì§ Copy deployment files to Remote Server
        if: steps.changed-services.outputs.services != ''
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "mkdir -p ~/real-estate-backend/nginx"
          scp -o StrictHostKeyChecking=no docker-compose.prod.yml ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:~/real-estate-backend/
          scp -o StrictHostKeyChecking=no nginx/default.conf ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:~/real-estate-backend/nginx/default.conf

      - name: üöÄ Deploy changed services on Remote Server
        if: steps.changed-services.outputs.services != ''
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            cd ~/real-estate-backend
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            docker compose -f docker-compose.prod.yml pull ${{ steps.changed-services.outputs.services }}
            docker compose -f docker-compose.prod.yml up -d ${{ steps.changed-services.outputs.services }}

            docker exec $(docker ps -q -f name=nginx) nginx -s reload
            docker image prune -f
            docker container prune -f
            docker system prune -f --volumes
          EOF